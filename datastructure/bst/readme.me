---
what is binary search tree?

1. has 2 children: left and right
2. left child is less than parent
3. right child is greater than parent


---
what is benefit of binary search tree?


search is faster than linked list
O(log n) vs O(n)


---
why is it O(log n)?

because it is a tree, and it is balanced


---
what if it is not balanced tree?

it is O(n)


---
if it's O(n), why not just use binary search tree all the time? instead of linked list?


because it is not efficient to insert and delete

you can simple attach a new node to the end of the linked list, but you have to find the right place to insert in binary search tree

